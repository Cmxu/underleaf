version: '3.8'

networks:
  web:
    external: false
  internal:
    external: false

services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: underleaf-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    networks:
      - web
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik:/etc/traefik:ro
      - ./docker/traefik/data:/data
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=web
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --log.level=INFO
      - --accesslog=true

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: underleaf-backend
    restart: unless-stopped
    networks:
      - web
      - internal
    volumes:
      - ./backend:/app
      - ./repos:/app/repos  # For initial repo cloning and volume initialization
      - /var/run/docker.sock:/var/run/docker.sock  # Allow backend to manage containers
    environment:
      - NODE_ENV=development
      - REPO_BASE_PATH=/app/repos
      - DOCKER_NETWORK=underleaf_web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
    depends_on:
      - traefik
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: underleaf-frontend
    restart: unless-stopped
    networks:
      - web
    volumes:
      - ./frontend:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    depends_on:
      - traefik
      - backend
    command: npm run dev

  # Base LaTeX service (template for user containers)
  latex-base:
    build:
      context: ./docker/latex
      dockerfile: Dockerfile
    image: underleaf-latex:latest
    container_name: underleaf-latex-base
    networks:
      - internal
    volumes:
      - ./repos:/workdir
    profiles:
      - build-only  # This won't start by default, just builds the image 