{"version":3,"file":"_page.svelte.js","sources":["../../../../../../src/lib/utils/api.ts","../../../../../../src/lib/components/FileTreeNode.svelte","../../../../../../src/lib/components/FileTree.svelte","../../../../../../src/lib/components/PdfPreview.svelte","../../../../../../src/routes/editor/+page.svelte"],"sourcesContent":["import { browser } from '$app/environment';\nimport type { \n\tCloneRepoResponse, \n\tCompileRepoResponse, \n\tFileTreeResponse, \n\tFileContentResponse,\n\tSaveFileResponse \n} from '$types/api';\n\nconst API_URL = browser \n\t? (import.meta.env.VITE_API_URL || 'http://localhost:3001')\n\t: 'http://localhost:3001';\n\nclass ApiClient {\n\tprivate baseUrl: string;\n\n\tconstructor(baseUrl: string = API_URL) {\n\t\tthis.baseUrl = baseUrl;\n\t}\n\n\tprivate async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\n\t\tconst url = `${this.baseUrl}${endpoint}`;\n\t\t\n\t\tconst response = await fetch(url, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t...options.headers\n\t\t\t},\n\t\t\t...options\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tconst errorData = await response.json().catch(() => ({ error: 'Unknown error' }));\n\t\t\tthrow new Error(errorData.error || `Request failed with status ${response.status}`);\n\t\t}\n\n\t\treturn response.json();\n\t}\n\n\tasync cloneRepo(repoUrl: string, userId = 'anonymous'): Promise<CloneRepoResponse> {\n\t\treturn this.request<CloneRepoResponse>('/api/clone', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ repoUrl, userId })\n\t\t});\n\t}\n\n\tasync compileRepo(\n\t\trepoName: string,\n\t\tuserId = 'anonymous',\n\t\ttexFile = 'main.tex'\n\t): Promise<CompileRepoResponse> {\n\t\treturn this.request<CompileRepoResponse>('/api/compile', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ repoName, userId, texFile })\n\t\t});\n\t}\n\n\tasync getFileTree(repoName: string, userId = 'anonymous'): Promise<FileTreeResponse> {\n\t\treturn this.request<FileTreeResponse>(`/api/files/${userId}/${repoName}`);\n\t}\n\n\tasync getFileContent(\n\t\trepoName: string, \n\t\tfilePath: string, \n\t\tuserId = 'anonymous'\n\t): Promise<FileContentResponse> {\n\t\tconst params = new URLSearchParams({ filePath });\n\t\treturn this.request<FileContentResponse>(`/api/files/${userId}/${repoName}/content?${params}`);\n\t}\n\n\tasync saveFile(\n\t\trepoName: string,\n\t\tfilePath: string,\n\t\tcontent: string,\n\t\tuserId = 'anonymous'\n\t): Promise<SaveFileResponse> {\n\t\treturn this.request<SaveFileResponse>(`/api/files/${userId}/${repoName}/content`, {\n\t\t\tmethod: 'PUT',\n\t\t\tbody: JSON.stringify({ filePath, content })\n\t\t});\n\t}\n}\n\nexport const apiClient = new ApiClient();\nexport default apiClient;","<script lang=\"ts\">\n\timport type { FileTreeItem } from '$types/api';\n\n\texport let item: FileTreeItem;\n\texport let depth: number = 0;\n\texport let expandedDirs: Set<string>;\n\texport let selectedFile: string | null;\n\texport let onToggleDirectory: (path: string) => void;\n\texport let onSelectFile: (path: string) => void;\n\n\tfunction getFileIcon(item: FileTreeItem): string {\n\t\tif (item.type === 'directory') {\n\t\t\treturn expandedDirs.has(item.path) ? 'üìÇ' : 'üìÅ';\n\t\t}\n\t\t\n\t\tconst ext = item.name.split('.').pop()?.toLowerCase();\n\t\tswitch (ext) {\n\t\t\tcase 'tex':\n\t\t\t\treturn 'üìÑ';\n\t\t\tcase 'pdf':\n\t\t\t\treturn 'üìã';\n\t\t\tcase 'png':\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\t\t\tcase 'gif':\n\t\t\t\treturn 'üñºÔ∏è';\n\t\t\tcase 'md':\n\t\t\t\treturn 'üìù';\n\t\t\tcase 'json':\n\t\t\t\treturn '‚öôÔ∏è';\n\t\t\tcase 'bib':\n\t\t\t\treturn 'üìö';\n\t\t\tdefault:\n\t\t\t\treturn 'üìÑ';\n\t\t}\n\t}\n\n\tfunction formatFileSize(bytes: number): string {\n\t\tif (bytes < 1024) return `${bytes} B`;\n\t\tif (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(1)} KB`;\n\t\treturn `${(bytes / (1024 * 1024)).toFixed(1)} MB`;\n\t}\n</script>\n\n<div class=\"select-none\" style=\"margin-left: {depth * 16}px\">\n\t{#if item.type === 'directory'}\n\t\t<button\n\t\t\ton:click={() => onToggleDirectory(item.path)}\n\t\t\tclass=\"w-full text-left px-4 py-1 hover:bg-gray-700 transition-colors flex items-center text-sm text-gray-300\"\n\t\t>\n\t\t\t<span class=\"w-4 text-xs\">{getFileIcon(item)}</span>\n\t\t\t<span class=\"ml-2 truncate\">{item.name}</span>\n\t\t</button>\n\t\t{#if expandedDirs.has(item.path) && item.children}\n\t\t\t{#each item.children as child}\n\t\t\t\t<svelte:self \n\t\t\t\t\titem={child} \n\t\t\t\t\tdepth={depth + 1}\n\t\t\t\t\t{expandedDirs}\n\t\t\t\t\t{selectedFile}\n\t\t\t\t\t{onToggleDirectory}\n\t\t\t\t\t{onSelectFile}\n\t\t\t\t/>\n\t\t\t{/each}\n\t\t{/if}\n\t{:else}\n\t\t<button\n\t\t\ton:click={() => onSelectFile(item.path)}\n\t\t\tclass=\"w-full text-left px-4 py-1 hover:bg-gray-700 transition-colors flex items-center justify-between text-sm group\"\n\t\t\tclass:bg-blue-600={selectedFile === item.path}\n\t\t\tclass:text-white={selectedFile === item.path}\n\t\t\tclass:text-gray-300={selectedFile !== item.path}\n\t\t>\n\t\t\t<div class=\"flex items-center min-w-0\">\n\t\t\t\t<span class=\"w-4 text-xs\">{getFileIcon(item)}</span>\n\t\t\t\t<span class=\"ml-2 truncate\">{item.name}</span>\n\t\t\t</div>\n\t\t\t{#if item.size !== undefined}\n\t\t\t\t<span class=\"text-xs text-gray-500 group-hover:text-gray-400 ml-2 flex-shrink-0\">\n\t\t\t\t\t{formatFileSize(item.size)}\n\t\t\t\t</span>\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n</div>","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { apiClient } from '$utils/api';\n\timport type { FileTreeItem } from '$types/api';\n\timport FileTreeNode from './FileTreeNode.svelte';\n\n\texport let repoName: string | null = null;\n\texport let onFileSelect: (filePath: string) => void = () => {};\n\n\tlet fileTree: FileTreeItem[] = [];\n\tlet expandedDirs = new Set<string>();\n\tlet selectedFile: string | null = null;\n\tlet loading = false;\n\tlet error: string | null = null;\n\n\tonMount(() => {\n\t\tif (repoName) {\n\t\t\tloadFileTree();\n\t\t}\n\t});\n\n\t$: if (repoName) {\n\t\tloadFileTree();\n\t}\n\n\tasync function loadFileTree() {\n\t\tif (!repoName) return;\n\t\t\n\t\tloading = true;\n\t\terror = null;\n\t\t\n\t\ttry {\n\t\t\tconst response = await apiClient.getFileTree(repoName);\n\t\t\tfileTree = response.tree;\n\t\t} catch (err) {\n\t\t\terror = err instanceof Error ? err.message : 'Failed to load file tree';\n\t\t} finally {\n\t\t\tloading = false;\n\t\t}\n\t}\n\n\tfunction toggleDirectory(path: string) {\n\t\tif (expandedDirs.has(path)) {\n\t\t\texpandedDirs.delete(path);\n\t\t} else {\n\t\t\texpandedDirs.add(path);\n\t\t}\n\t\texpandedDirs = new Set(expandedDirs); // Trigger reactivity\n\t}\n\n\tfunction selectFile(filePath: string) {\n\t\tselectedFile = filePath;\n\t\tonFileSelect(filePath);\n\t}\n</script>\n\n<div class=\"h-full flex flex-col bg-dark-800\">\n\t<div class=\"p-4 border-b border-gray-700\">\n\t\t<h3 class=\"text-gray-300 font-medium flex items-center\">\n\t\t\t<span class=\"mr-2\">üìÅ</span>\n\t\t\tFile Explorer\n\t\t</h3>\n\t\t{#if repoName}\n\t\t\t<p class=\"text-xs text-gray-400 mt-1 truncate\">{repoName}</p>\n\t\t{/if}\n\t</div>\n\n\t<div class=\"flex-1 overflow-y-auto\">\n\t\t{#if loading}\n\t\t\t<div class=\"p-4 text-center\">\n\t\t\t\t<div class=\"loading-spinner mx-auto mb-2\"></div>\n\t\t\t\t<p class=\"text-gray-400 text-sm\">Loading files...</p>\n\t\t\t</div>\n\t\t{:else if error}\n\t\t\t<div class=\"p-4 text-center\">\n\t\t\t\t<p class=\"text-red-400 text-sm mb-2\">‚ö†Ô∏è Error loading files</p>\n\t\t\t\t<p class=\"text-gray-400 text-xs\">{error}</p>\n\t\t\t\t<button \n\t\t\t\t\ton:click={loadFileTree}\n\t\t\t\t\tclass=\"mt-2 text-blue-400 hover:text-blue-300 text-sm underline\"\n\t\t\t\t>\n\t\t\t\t\tRetry\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t{:else if !repoName}\n\t\t\t<div class=\"p-4 text-center text-gray-400 text-sm\">\n\t\t\t\t<p>üìÇ</p>\n\t\t\t\t<p class=\"mt-2\">No repository loaded</p>\n\t\t\t</div>\n\t\t{:else if fileTree.length === 0}\n\t\t\t<div class=\"p-4 text-center text-gray-400 text-sm\">\n\t\t\t\t<p>üì≠</p>\n\t\t\t\t<p class=\"mt-2\">Repository is empty</p>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t{#each fileTree as item}\n\t\t\t\t<FileTreeNode \n\t\t\t\t\t{item} \n\t\t\t\t\tdepth={0}\n\t\t\t\t\t{expandedDirs}\n\t\t\t\t\t{selectedFile}\n\t\t\t\t\tonToggleDirectory={toggleDirectory}\n\t\t\t\t\tonSelectFile={selectFile}\n\t\t\t\t/>\n\t\t\t{/each}\n\t\t{/if}\n\t</div>\n</div>","<script lang=\"ts\">\n\texport let pdfUrl: string | null = null;\n\texport let isLoading = false;\n\texport let error: string | null = null;\n\n\tlet iframeElement: HTMLIFrameElement;\n\tlet loadError = false;\n\n\tfunction handleIframeLoad() {\n\t\tloadError = false;\n\t}\n\n\tfunction handleIframeError() {\n\t\tloadError = true;\n\t}\n\n\tfunction refreshPdf() {\n\t\tif (iframeElement && pdfUrl) {\n\t\t\t// Use PDF.js viewer with configuration for right-side thumbnails\n\t\t\tconst timestamp = Date.now();\n\t\t\tconst pdfJsUrl = `/pdfjs/web/viewer.html?file=${encodeURIComponent(pdfUrl)}&t=${timestamp}`;\n\t\t\tiframeElement.src = pdfJsUrl;\n\t\t}\n\t}\n\n\tfunction getPdfUrlWithPdfJs(baseUrl: string): string {\n\t\t// Use PDF.js viewer with custom right-side thumbnail configuration\n\t\treturn `/pdfjs/web/viewer.html?file=${encodeURIComponent(baseUrl)}`;\n\t}\n\n\t// Refresh PDF when URL changes\n\t$: if (pdfUrl && iframeElement) {\n\t\trefreshPdf();\n\t}\n</script>\n\n<div class=\"h-full flex flex-col bg-gray-100\">\n\t<div class=\"flex-1 relative\">\n\t\t{#if isLoading}\n\t\t\t<div class=\"absolute inset-0 flex items-center justify-center bg-gray-50\">\n\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t<div class=\"loading-spinner mx-auto mb-4 w-8 h-8\"></div>\n\t\t\t\t\t<p class=\"text-gray-600\">Compiling PDF...</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{:else if error}\n\t\t\t<div class=\"absolute inset-0 flex items-center justify-center bg-red-50\">\n\t\t\t\t<div class=\"text-center max-w-md mx-auto p-6\">\n\t\t\t\t\t<svg class=\"w-16 h-16 mx-auto mb-4 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-red-800 mb-2\">Compilation Error</h3>\n\t\t\t\t\t<p class=\"text-red-600 text-sm mb-4\">{error}</p>\n\t\t\t\t\t<p class=\"text-xs text-gray-500\">\n\t\t\t\t\t\tInstall LaTeX (TeX Live) or Docker for full compilation support.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{:else if !pdfUrl}\n\t\t\t<div class=\"absolute inset-0 flex items-center justify-center\">\n\t\t\t\t<div class=\"text-center text-gray-600\">\n\t\t\t\t\t<svg class=\"w-16 h-16 mx-auto mb-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<p class=\"text-lg font-medium mb-2\">PDF Preview</p>\n\t\t\t\t\t<p class=\"text-sm\">Compile your LaTeX document to see the preview</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{:else if loadError}\n\t\t\t<div class=\"absolute inset-0 flex items-center justify-center bg-yellow-50\">\n\t\t\t\t<div class=\"text-center max-w-md mx-auto p-6\">\n\t\t\t\t\t<svg class=\"w-16 h-16 mx-auto mb-4 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<h3 class=\"text-lg font-medium text-yellow-800 mb-2\">PDF Load Error</h3>\n\t\t\t\t\t<p class=\"text-yellow-700 text-sm mb-4\">Unable to display the PDF file.</p>\n\t\t\t\t\t<button \n\t\t\t\t\t\ton:click={refreshPdf}\n\t\t\t\t\t\tclass=\"text-blue-600 hover:text-blue-500 underline text-sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\tTry Again\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<iframe\n\t\t\t\tbind:this={iframeElement}\n\t\t\t\tsrc={getPdfUrlWithPdfJs(pdfUrl)}\n\t\t\t\ton:load={handleIframeLoad}\n\t\t\t\ton:error={handleIframeError}\n\t\t\t\tclass=\"w-full h-full border-0\"\n\t\t\t\ttitle=\"PDF Preview\"\n\t\t\t></iframe>\n\t\t{/if}\n\t</div>\n\t\n\t{#if pdfUrl && !isLoading && !error}\n\t\t<div class=\"bg-gray-200 px-4 py-2 border-t border-gray-300 flex items-center justify-between text-sm\">\n\t\t\t<span class=\"text-gray-600\">PDF Preview</span>\n\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t<button \n\t\t\t\t\ton:click={refreshPdf}\n\t\t\t\t\tclass=\"text-gray-600 hover:text-gray-800 transition-colors\"\n\t\t\t\t\ttitle=\"Refresh PDF\"\n\t\t\t\t\taria-label=\"Refresh PDF\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t\t<a \n\t\t\t\t\thref={getPdfUrlWithPdfJs(pdfUrl)} \n\t\t\t\t\ttarget=\"_blank\" \n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\tclass=\"text-gray-600 hover:text-gray-800 transition-colors\"\n\t\t\t\t\ttitle=\"Open in new tab\"\n\t\t\t\t\taria-label=\"Open PDF in new tab\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n</div>","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { goto } from '$app/navigation';\n\timport { page } from '$app/stores';\n\timport FileTree from '$components/FileTree.svelte';\n\timport PdfPreview from '$components/PdfPreview.svelte';\n\timport { apiClient } from '$lib/utils/api';\n\t\n\tlet editorContainer: HTMLDivElement;\n\tlet monacoEditor: any = null;\n\tlet monaco: any = null;\n\tlet isCompiling = false;\n\tlet compileError: string | null = null;\n\tlet compileSuccess = false;\n\tlet currentRepoName: string | null = null;\n\tlet currentFilePath: string | null = null;\n\tlet unsavedChanges = false;\n\tlet autoSaveTimeout: ReturnType<typeof setTimeout> | null = null;\n\tlet pdfUrl: string | null = null;\n\n\t// Get repo name from URL params or localStorage\n\tonMount(async () => {\n\t\t// Try to get repository name from URL params or localStorage\n\t\tconst searchParams = new URLSearchParams(window.location.search);\n\t\tcurrentRepoName = searchParams.get('repo') || localStorage.getItem('currentRepo');\n\t\t\n\t\tif (!currentRepoName) {\n\t\t\t// Redirect to home if no repository is specified\n\t\t\tgoto('/');\n\t\t\treturn;\n\t\t}\n\n\t\tawait initializeMonaco();\n\t});\n\n\tasync function initializeMonaco() {\n\t\ttry {\n\t\t\tconst monacoLoader = await import('@monaco-editor/loader');\n\t\t\tmonacoLoader.default.config({\n\t\t\t\tpaths: { \n\t\t\t\t\tvs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.45.0/min/vs' \n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmonaco = await monacoLoader.default.init();\n\t\t\t\n\t\t\t// Register LaTeX language if not already registered\n\t\t\tif (!monaco.languages.getLanguages().find((lang: any) => lang.id === 'latex')) {\n\t\t\t\tmonaco.languages.register({ id: 'latex' });\n\t\t\t\t\n\t\t\t\t// Basic LaTeX syntax highlighting\n\t\t\t\tmonaco.languages.setMonarchTokensProvider('latex', {\n\t\t\t\t\ttokenizer: {\n\t\t\t\t\t\troot: [\n\t\t\t\t\t\t\t[/\\\\[a-zA-Z@]+/, 'keyword'],\n\t\t\t\t\t\t\t[/\\{[^}]*\\}/, 'string'],\n\t\t\t\t\t\t\t[/%.*$/, 'comment'],\n\t\t\t\t\t\t\t[/\\$[^$]*\\$/, 'number'], // Math mode\n\t\t\t\t\t\t\t[/\\$\\$[^$]*\\$\\$/, 'number'], // Display math\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tmonacoEditor = monaco.editor.create(editorContainer, {\n\t\t\t\tvalue: '% Welcome to Underleaf!\\n% Select a file from the file tree to start editing\\n\\n\\\\documentclass{article}\\n\\\\usepackage[utf8]{inputenc}\\n\\\\usepackage[T1]{fontenc}\\n\\\\usepackage{amsmath}\\n\\\\usepackage{amsfonts}\\n\\\\usepackage{amssymb}\\n\\\\usepackage{graphicx}\\n\\n\\\\title{Your Document Title}\\n\\\\author{Your Name}\\n\\\\date{\\\\today}\\n\\n\\\\begin{document}\\n\\n\\\\maketitle\\n\\n\\\\section{Introduction}\\n\\nYour content here...\\n\\n\\\\end{document}',\n\t\t\t\tlanguage: 'latex',\n\t\t\t\ttheme: 'vs-dark',\n\t\t\t\tfontSize: 14,\n\t\t\t\tfontFamily: 'JetBrains Mono, Consolas, Monaco, monospace',\n\t\t\t\twordWrap: 'on',\n\t\t\t\tautomaticLayout: true,\n\t\t\t\tminimap: { enabled: false },\n\t\t\t\tscrollBeyondLastLine: false,\n\t\t\t\trenderLineHighlight: 'line',\n\t\t\t\tlineNumbers: 'on',\n\t\t\t\tfolding: true,\n\t\t\t\tbracketMatching: 'always',\n\t\t\t\tautoIndent: 'full',\n\t\t\t\ttabSize: 2,\n\t\t\t\tinsertSpaces: true\n\t\t\t});\n\n\t\t\t// Auto-save on content change\n\t\t\tmonacoEditor.onDidChangeModelContent(() => {\n\t\t\t\tunsavedChanges = true;\n\t\t\t\t\n\t\t\t\tif (autoSaveTimeout) {\n\t\t\t\t\tclearTimeout(autoSaveTimeout);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tautoSaveTimeout = setTimeout(() => {\n\t\t\t\t\tif (currentFilePath && unsavedChanges) {\n\t\t\t\t\t\thandleSaveFile();\n\t\t\t\t\t}\n\t\t\t\t}, 2000); // Auto-save after 2 seconds of inactivity\n\t\t\t});\n\n\t\t\t// Add LaTeX-specific keybindings\n\t\t\tmonacoEditor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, () => {\n\t\t\t\thandleSaveFile();\n\t\t\t});\n\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to initialize Monaco Editor:', error);\n\t\t}\n\t}\n\n\tasync function handleFileSelect(filePath: string) {\n\t\tif (!currentRepoName) return;\n\t\t\n\t\ttry {\n\t\t\tconst response = await apiClient.getFileContent(currentRepoName, filePath);\n\t\t\t\n\t\t\tif (monacoEditor) {\n\t\t\t\tmonacoEditor.setValue(response.content);\n\t\t\t\tcurrentFilePath = filePath;\n\t\t\t\tunsavedChanges = false;\n\t\t\t\tcompileError = null;\n\t\t\t\tcompileSuccess = false;\n\t\t\t\t\n\t\t\t\t// Set language based on file extension\n\t\t\t\tconst ext = filePath.split('.').pop()?.toLowerCase();\n\t\t\t\tconst language = ext === 'tex' ? 'latex' : \n\t\t\t\t\t\t\t\t ext === 'bib' ? 'bibtex' :\n\t\t\t\t\t\t\t\t ext === 'md' ? 'markdown' :\n\t\t\t\t\t\t\t\t ext === 'json' ? 'json' : 'plaintext';\n\t\t\t\t\n\t\t\t\tmonaco.editor.setModelLanguage(monacoEditor.getModel(), language);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tcompileError = err instanceof Error ? err.message : 'Failed to load file';\n\t\t}\n\t}\n\n\tasync function handleSaveFile() {\n\t\tif (!currentRepoName || !currentFilePath || !monacoEditor) return;\n\t\t\n\t\ttry {\n\t\t\tconst content = monacoEditor.getValue();\n\t\t\tawait apiClient.saveFile(currentRepoName, currentFilePath, content);\n\t\t\tunsavedChanges = false;\n\t\t\t\n\t\t\tif (autoSaveTimeout) {\n\t\t\t\tclearTimeout(autoSaveTimeout);\n\t\t\t\tautoSaveTimeout = null;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Failed to save file:', err);\n\t\t}\n\t}\n\n\tasync function handleCompile() {\n\t\tif (!currentRepoName) return;\n\t\t\n\t\tisCompiling = true;\n\t\tcompileError = null;\n\t\tcompileSuccess = false;\n\n\t\t// Save current file before compiling\n\t\tif (currentFilePath && unsavedChanges) {\n\t\t\tawait handleSaveFile();\n\t\t}\n\n\t\ttry {\n\t\t\tconst texFile = currentFilePath?.endsWith('.tex') ? currentFilePath : 'main.tex';\n\t\t\tconst result = await apiClient.compileRepo(currentRepoName, 'anonymous', texFile);\n\t\t\tcompileSuccess = true;\n\t\t\t\n\t\t\tif (result.pdfUrl) {\n\t\t\t\t// Add base URL if it's a relative URL\n\t\t\t\tpdfUrl = result.pdfUrl.startsWith('http') \n\t\t\t\t\t? result.pdfUrl \n\t\t\t\t\t: `http://localhost:3001${result.pdfUrl}`;\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log('Compilation successful:', result);\n\t\t} catch (err) {\n\t\t\tcompileError = err instanceof Error ? err.message : 'Compilation failed';\n\t\t} finally {\n\t\t\tisCompiling = false;\n\t\t}\n\t}\n\n\tfunction handleGoHome() {\n\t\tif (currentRepoName) {\n\t\t\tlocalStorage.removeItem('currentRepo');\n\t\t}\n\t\tgoto('/');\n\t}\n\n\tfunction getFileNameFromPath(path: string | null): string {\n\t\tif (!path) return 'Untitled';\n\t\treturn path.split('/').pop() || path;\n\t}\n</script>\n\n<svelte:head>\n\t<title>Editor - Underleaf</title>\n</svelte:head>\n\n<div class=\"h-screen flex flex-col bg-dark-900\">\n\t<!-- Header -->\n\t<header class=\"bg-dark-800 border-b border-gray-700 px-6 py-4 flex items-center justify-between\">\n\t\t<div class=\"flex items-center space-x-4\">\n\t\t\t<button\n\t\t\t\ton:click={handleGoHome}\n\t\t\t\tclass=\"text-gray-300 hover:text-white transition-colors\"\n\t\t\t\taria-label=\"Go back to home\"\n\t\t\t>\n\t\t\t\t<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t\t<div>\n\t\t\t\t<h1 class=\"text-xl font-semibold text-white\">Underleaf Editor</h1>\n\t\t\t\t{#if currentRepoName}\n\t\t\t\t\t<p class=\"text-sm text-gray-400\">{currentRepoName}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"flex items-center space-x-4\">\n\t\t\t{#if currentFilePath}\n\t\t\t\t<div class=\"text-sm text-gray-300 flex items-center space-x-2\">\n\t\t\t\t\t<span>üìÑ</span>\n\t\t\t\t\t<span>{getFileNameFromPath(currentFilePath)}</span>\n\t\t\t\t\t{#if unsavedChanges}\n\t\t\t\t\t\t<span class=\"text-orange-400\" title=\"Unsaved changes\">‚óè</span>\n\t\t\t\t\t{/if}\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t\n\t\t\t{#if compileSuccess}\n\t\t\t\t<div class=\"text-green-400 text-sm flex items-center space-x-2\">\n\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<span>Compiled successfully</span>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t\n\t\t\t{#if currentFilePath}\n\t\t\t\t<button\n\t\t\t\t\ton:click={handleSaveFile}\n\t\t\t\t\tdisabled={!unsavedChanges}\n\t\t\t\t\tclass=\"text-gray-400 hover:text-white transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n\t\t\t\t\ttitle=\"Save file (Ctrl+S)\"\n\t\t\t\t\taria-label=\"Save file\"\n\t\t\t\t>\n\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3-3m0 0l-3 3m3-3v12\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t{/if}\n\t\t\t\n\t\t\t<button\n\t\t\t\ton:click={handleCompile}\n\t\t\t\tdisabled={isCompiling || !currentRepoName}\n\t\t\t\tclass=\"btn-primary px-6 py-2 text-sm disabled:opacity-50\"\n\t\t\t>\n\t\t\t\t{#if isCompiling}\n\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t<div class=\"loading-spinner w-4 h-4\"></div>\n\t\t\t\t\t\t<span>Compiling...</span>\n\t\t\t\t\t</div>\n\t\t\t\t{:else}\n\t\t\t\t\tCompile PDF\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t</div>\n\t</header>\n\n\t<!-- Main Editor Area -->\n\t<div class=\"flex-1 flex overflow-hidden\">\n\t\t<!-- File Tree Sidebar -->\n\t\t<aside class=\"w-64 bg-dark-800 border-r border-gray-700 overflow-y-auto\">\n\t\t\t<FileTree repoName={currentRepoName} onFileSelect={handleFileSelect} />\n\t\t</aside>\n\n\t\t<!-- Editor -->\n\t\t<div class=\"flex-1 flex flex-col\">\n\t\t\t{#if currentFilePath}\n\t\t\t\t<div class=\"bg-dark-700 px-4 py-2 border-b border-gray-600 text-sm text-gray-300 flex items-center justify-between\">\n\t\t\t\t\t<span>Editing: {getFileNameFromPath(currentFilePath)}</span>\n\t\t\t\t\t<span class=\"text-xs text-gray-500\">Auto-save enabled</span>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t\n\t\t\t<div class=\"flex-1 relative\">\n\t\t\t\t<div bind:this={editorContainer} class=\"w-full h-full\"></div>\n\t\t\t</div>\n\t\t\t\n\t\t\t{#if compileError}\n\t\t\t\t<div class=\"bg-red-500/10 border-t border-red-500/20 p-4 text-red-300\">\n\t\t\t\t\t<div class=\"flex items-start space-x-2\">\n\t\t\t\t\t\t<svg class=\"w-5 h-5 mt-0.5 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p class=\"font-medium\">Compilation Error</p>\n\t\t\t\t\t\t\t<p class=\"text-sm text-red-200 mt-1\">{compileError}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t</div>\n\n\t\t<!-- PDF Preview -->\n\t\t<aside class=\"w-1/2 border-l border-gray-700\">\n\t\t\t<PdfPreview \n\t\t\t\t{pdfUrl} \n\t\t\t\tisLoading={isCompiling} \n\t\t\t\terror={compileError} \n\t\t\t/>\n\t\t</aside>\n\t</div>\n</div>"],"names":["API_URL","ApiClient","baseUrl","endpoint","options","url","response","errorData","repoUrl","userId","repoName","texFile","filePath","params","content","apiClient","item","$$props","depth","expandedDirs","selectedFile","onToggleDirectory","onSelectFile","getFileIcon","formatFileSize","bytes","$$payload","$.attr_style","$.stringify","$.escape","each_array","$.ensure_array_like","child","$$index","onFileSelect","$.fallback","fileTree","loading","error","loadFileTree","err","toggleDirectory","path","selectFile","pdfUrl","isLoading","getPdfUrlWithPdfJs","$.attr","isCompiling","compileError","currentRepoName","handleFileSelect"],"mappings":"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"}