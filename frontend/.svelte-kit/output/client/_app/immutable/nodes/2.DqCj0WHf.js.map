{"version":3,"file":"2.DqCj0WHf.js","sources":["../../../../../../../node_modules/svelte/src/internal/client/dom/elements/bindings/input.js","../../../../../../../node_modules/svelte/src/internal/client/dom/legacy/event-modifiers.js","../../../../../../src/routes/+page.svelte"],"sourcesContent":["import { DEV } from 'esm-env';\nimport { render_effect, teardown } from '../../../reactivity/effects.js';\nimport { listen_to_event_and_reset_event } from './shared.js';\nimport * as e from '../../../errors.js';\nimport { is } from '../../../proxy.js';\nimport { queue_micro_task } from '../../task.js';\nimport { hydrating } from '../../hydration.js';\nimport { untrack } from '../../../runtime.js';\nimport { is_runes } from '../../../context.js';\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_value(input, get, set = get) {\n\tvar runes = is_runes();\n\n\tlisten_to_event_and_reset_event(input, 'input', (is_reset) => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\t/** @type {any} */\n\t\tvar value = is_reset ? input.defaultValue : input.value;\n\t\tvalue = is_numberlike_input(input) ? to_number(value) : value;\n\t\tset(value);\n\n\t\t// In runes mode, respect any validation in accessors (doesn't apply in legacy mode,\n\t\t// because we use mutable state which ensures the render effect always runs)\n\t\tif (runes && value !== (value = get())) {\n\t\t\tvar start = input.selectionStart;\n\t\t\tvar end = input.selectionEnd;\n\n\t\t\t// the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\n\t\t\t// Restore selection\n\t\t\tif (end !== null) {\n\t\t\t\tinput.selectionStart = start;\n\t\t\t\tinput.selectionEnd = Math.min(end, input.value.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\t(hydrating && input.defaultValue !== input.value) ||\n\t\t// If defaultValue is set, then value == defaultValue\n\t\t// TODO Svelte 6: remove input.value check and set to empty string?\n\t\t(untrack(get) == null && input.value)\n\t) {\n\t\tset(is_numberlike_input(input) ? to_number(input.value) : input.value);\n\t}\n\n\trender_effect(() => {\n\t\tif (DEV && input.type === 'checkbox') {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.bind_invalid_checkbox_value();\n\t\t}\n\n\t\tvar value = get();\n\n\t\tif (is_numberlike_input(input) && value === to_number(input.value)) {\n\t\t\t// handles 0 vs 00 case (see https://github.com/sveltejs/svelte/issues/9959)\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.type === 'date' && !value && !input.value) {\n\t\t\t// Handles the case where a temporarily invalid date is set (while typing, for example with a leading 0 for the day)\n\t\t\t// and prevents this state from clearing the other parts of the date input (see https://github.com/sveltejs/svelte/issues/7897)\n\t\t\treturn;\n\t\t}\n\n\t\t// don't set the value of the input if it's the same to allow\n\t\t// minlength to work properly\n\t\tif (value !== input.value) {\n\t\t\t// @ts-expect-error the value is coerced on assignment\n\t\t\tinput.value = value ?? '';\n\t\t}\n\t});\n}\n\n/** @type {Set<HTMLInputElement[]>} */\nconst pending = new Set();\n\n/**\n * @param {HTMLInputElement[]} inputs\n * @param {null | [number]} group_index\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_group(inputs, group_index, input, get, set = get) {\n\tvar is_checkbox = input.getAttribute('type') === 'checkbox';\n\tvar binding_group = inputs;\n\n\t// needs to be let or related code isn't treeshaken out if it's always false\n\tlet hydration_mismatch = false;\n\n\tif (group_index !== null) {\n\t\tfor (var index of group_index) {\n\t\t\t// @ts-expect-error\n\t\t\tbinding_group = binding_group[index] ??= [];\n\t\t}\n\t}\n\n\tbinding_group.push(input);\n\n\tlisten_to_event_and_reset_event(\n\t\tinput,\n\t\t'change',\n\t\t() => {\n\t\t\t// @ts-ignore\n\t\t\tvar value = input.__value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t}\n\n\t\t\tset(value);\n\t\t},\n\t\t// TODO better default value handling\n\t\t() => set(is_checkbox ? [] : null)\n\t);\n\n\trender_effect(() => {\n\t\tvar value = get();\n\n\t\t// If we are hydrating and the value has since changed, then use the update value\n\t\t// from the input instead.\n\t\tif (hydrating && input.defaultChecked !== input.checked) {\n\t\t\thydration_mismatch = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (is_checkbox) {\n\t\t\tvalue = value || [];\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = value.includes(input.__value);\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\tinput.checked = is(input.__value, value);\n\t\t}\n\t});\n\n\tteardown(() => {\n\t\tvar index = binding_group.indexOf(input);\n\n\t\tif (index !== -1) {\n\t\t\tbinding_group.splice(index, 1);\n\t\t}\n\t});\n\n\tif (!pending.has(binding_group)) {\n\t\tpending.add(binding_group);\n\n\t\tqueue_micro_task(() => {\n\t\t\t// necessary to maintain binding group order in all insertion scenarios\n\t\t\tbinding_group.sort((a, b) => (a.compareDocumentPosition(b) === 4 ? -1 : 1));\n\t\t\tpending.delete(binding_group);\n\t\t});\n\t}\n\n\tqueue_micro_task(() => {\n\t\tif (hydration_mismatch) {\n\t\t\tvar value;\n\n\t\t\tif (is_checkbox) {\n\t\t\t\tvalue = get_binding_group_value(binding_group, value, input.checked);\n\t\t\t} else {\n\t\t\t\tvar hydration_input = binding_group.find((input) => input.checked);\n\t\t\t\t// @ts-ignore\n\t\t\t\tvalue = hydration_input?.__value;\n\t\t\t}\n\n\t\t\tset(value);\n\t\t}\n\t});\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => unknown} get\n * @param {(value: unknown) => void} set\n * @returns {void}\n */\nexport function bind_checked(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', (is_reset) => {\n\t\tvar value = is_reset ? input.defaultChecked : input.checked;\n\t\tset(value);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the update value from the input instead.\n\t\t(hydrating && input.defaultChecked !== input.checked) ||\n\t\t// If defaultChecked is set, then checked == defaultChecked\n\t\tuntrack(get) == null\n\t) {\n\t\tset(input.checked);\n\t}\n\n\trender_effect(() => {\n\t\tvar value = get();\n\t\tinput.checked = Boolean(value);\n\t});\n}\n\n/**\n * @template V\n * @param {Array<HTMLInputElement>} group\n * @param {V} __value\n * @param {boolean} checked\n * @returns {V[]}\n */\nfunction get_binding_group_value(group, __value, checked) {\n\tvar value = new Set();\n\n\tfor (var i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) {\n\t\t\t// @ts-ignore\n\t\t\tvalue.add(group[i].__value);\n\t\t}\n\t}\n\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement} input\n */\nfunction is_numberlike_input(input) {\n\tvar type = input.type;\n\treturn type === 'number' || type === 'range';\n}\n\n/**\n * @param {string} value\n */\nfunction to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @param {HTMLInputElement} input\n * @param {() => FileList | null} get\n * @param {(value: FileList | null) => void} set\n */\nexport function bind_files(input, get, set = get) {\n\tlisten_to_event_and_reset_event(input, 'change', () => {\n\t\tset(input.files);\n\t});\n\n\tif (\n\t\t// If we are hydrating and the value has since changed,\n\t\t// then use the updated value from the input instead.\n\t\thydrating &&\n\t\tinput.files\n\t) {\n\t\tset(input.files);\n\t}\n\n\trender_effect(() => {\n\t\tinput.files = get();\n\t});\n}\n","import { noop } from '../../../shared/utils.js';\nimport { user_pre_effect } from '../../reactivity/effects.js';\nimport { on } from '../elements/events.js';\n\n/**\n * Substitute for the `trusted` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function trusted(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tif (event.isTrusted) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `self` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function self(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\t// @ts-ignore\n\t\tif (event.target === this) {\n\t\t\t// @ts-ignore\n\t\t\tfn?.apply(this, args);\n\t\t}\n\t};\n}\n\n/**\n * Substitute for the `stopPropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopPropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `once` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function once(fn) {\n\tvar ran = false;\n\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `stopImmediatePropagation` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function stopImmediatePropagation(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `preventDefault` event modifier\n * @deprecated\n * @param {(event: Event, ...args: Array<unknown>) => void} fn\n * @returns {(event: Event, ...args: unknown[]) => void}\n */\nexport function preventDefault(fn) {\n\treturn function (...args) {\n\t\tvar event = /** @type {Event} */ (args[0]);\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn?.apply(this, args);\n\t};\n}\n\n/**\n * Substitute for the `passive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function passive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: true\n\t\t});\n\t});\n}\n\n/**\n * Substitute for the `nonpassive` event modifier, implemented as an action\n * @deprecated\n * @param {HTMLElement} node\n * @param {[event: string, handler: () => EventListener]} options\n */\nexport function nonpassive(node, [event, handler]) {\n\tuser_pre_effect(() => {\n\t\treturn on(node, event, handler() ?? noop, {\n\t\t\tpassive: false\n\t\t});\n\t});\n}\n","<script lang=\"ts\">\n\timport { goto } from '$app/navigation';\n\timport { apiClient } from '$lib/utils/api';\n\t\n\tlet repoUrl = '';\n\tlet isLoading = false;\n\tlet error: string | null = null;\n\n\tasync function handleSubmit() {\n\t\tif (!repoUrl.trim()) return;\n\t\t\n\t\tisLoading = true;\n\t\terror = null;\n\n\t\ttry {\n\t\t\tconst result = await apiClient.cloneRepo(repoUrl);\n\t\t\tconsole.log('Repository cloned:', result);\n\t\t\t\n\t\t\t// Extract repository name from URL\n\t\t\tconst repoName = repoUrl.split('/').pop()?.replace('.git', '') || 'repository';\n\t\t\t\n\t\t\t// Store current repository in localStorage for the editor\n\t\t\tlocalStorage.setItem('currentRepo', repoName);\n\t\t\t\n\t\t\t// Navigate to editor with the repository\n\t\t\tawait goto(`/editor?repo=${encodeURIComponent(repoName)}`);\n\t\t} catch (err) {\n\t\t\terror = err instanceof Error ? err.message : 'Failed to clone repository';\n\t\t} finally {\n\t\t\tisLoading = false;\n\t\t}\n\t}\n\n\tfunction handleKeydown(event: KeyboardEvent) {\n\t\tif (event.key === 'Enter' && !isLoading) {\n\t\t\thandleSubmit();\n\t\t}\n\t}\n</script>\n\n<svelte:head>\n\t<title>Underleaf - Collaborative LaTeX Editor</title>\n\t<meta name=\"description\" content=\"Modern collaborative LaTeX editor with real-time collaboration and Git integration\" />\n</svelte:head>\n\n<div class=\"min-h-screen flex items-center justify-center p-8 bg-dark-800\">\n\t<div class=\"w-full max-w-2xl\">\n\t\t<div class=\"text-center mb-12\">\n\t\t\t<h1 class=\"text-6xl md:text-7xl font-bold text-white mb-6 text-shadow\">\n\t\t\t\tUnderleaf\n\t\t\t</h1>\n\t\t\t<p class=\"text-xl text-gray-300 max-w-lg mx-auto leading-relaxed\">\n\t\t\t\tA modern collaborative LaTeX editor with real-time collaboration, AI assistance, and Git integration.\n\t\t\t</p>\n\t\t</div>\n\n\t\t<form on:submit|preventDefault={handleSubmit} class=\"space-y-6\">\n\t\t\t<div class=\"relative\">\n\t\t\t\t<div class=\"relative flex items-center bg-white/95 backdrop-blur-glass rounded-3xl p-1 shadow-2xl hover:shadow-3xl transition-all duration-300 hover:-translate-y-1 focus-within:bg-white focus-within:shadow-3xl focus-within:-translate-y-1 border border-white/10 focus-within:border-white/20\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tbind:value={repoUrl}\n\t\t\t\t\t\ton:keydown={handleKeydown}\n\t\t\t\t\t\ttype=\"url\"\n\t\t\t\t\t\tplaceholder=\"Enter Git repository URL (e.g., https://github.com/user/repo)\"\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\tclass=\"flex-1 px-8 py-6 text-lg font-medium bg-transparent text-gray-800 placeholder-gray-500 outline-none rounded-3xl disabled:opacity-70 disabled:cursor-not-allowed\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isLoading || !repoUrl.trim()}\n\t\t\t\t\t\tclass=\"btn-primary h-16 w-16 rounded-2xl flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{#if isLoading}\n\t\t\t\t\t\t\t<div class=\"loading-spinner\"></div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{#if error}\n\t\t\t\t<div class=\"bg-red-500/10 border border-red-500/20 rounded-2xl p-4 text-red-300 text-center\">\n\t\t\t\t\t{error}\n\t\t\t\t</div>\n\t\t\t{/if}\n\n\t\t\t<div class=\"text-center\">\n\t\t\t\t<p class=\"text-gray-400 text-sm leading-relaxed\">\n\t\t\t\t\tClone a LaTeX project from GitHub and start collaborating instantly\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>"],"names":["bind_value","input","get","set","runes","is_runes","listen_to_event_and_reset_event","is_reset","value","is_numberlike_input","to_number","start","end","hydrating","untrack","render_effect","type","preventDefault","fn","args","event","repoUrl","isLoading","error","handleSubmit","$.get","$.set","result","apiClient","repoName","goto","err","handleKeydown","$$render","consequent","alternate","consequent_1","$.bind_value","$$value"],"mappings":"udAgBO,SAASA,EAAWC,EAAOC,EAAKC,EAAMD,EAAK,CACjD,IAAIE,EAAQC,EAAU,EAEtBC,EAAgCL,EAAO,QAAUM,GAAa,CAO7D,IAAIC,EAAQD,EAAWN,EAAM,aAAeA,EAAM,MAMlD,GALAO,EAAQC,EAAoBR,CAAK,EAAIS,EAAUF,CAAK,EAAIA,EACxDL,EAAIK,CAAK,EAILJ,GAASI,KAAWA,EAAQN,EAAK,GAAG,CACvC,IAAIS,EAAQV,EAAM,eACdW,EAAMX,EAAM,aAGhBA,EAAM,MAAQO,GAAS,GAGnBI,IAAQ,OACXX,EAAM,eAAiBU,EACvBV,EAAM,aAAe,KAAK,IAAIW,EAAKX,EAAM,MAAM,MAAM,EAEzD,CACA,CAAE,GAKCY,GAAaZ,EAAM,eAAiBA,EAAM,OAG1Ca,EAAQZ,CAAG,GAAK,MAAQD,EAAM,QAE/BE,EAAIM,EAAoBR,CAAK,EAAIS,EAAUT,EAAM,KAAK,EAAIA,EAAM,KAAK,EAGtEc,EAAc,IAAM,CAMnB,IAAIP,EAAQN,EAAK,EAEbO,EAAoBR,CAAK,GAAKO,IAAUE,EAAUT,EAAM,KAAK,GAK7DA,EAAM,OAAS,QAAU,CAACO,GAAS,CAACP,EAAM,OAQ1CO,IAAUP,EAAM,QAEnBA,EAAM,MAAQO,GAAS,GAE1B,CAAE,CACF,CA4JA,SAASC,EAAoBR,EAAO,CACnC,IAAIe,EAAOf,EAAM,KACjB,OAAOe,IAAS,UAAYA,IAAS,OACtC,CAKA,SAASN,EAAUF,EAAO,CACzB,OAAOA,IAAU,GAAK,KAAO,CAACA,CAC/B,CC/JO,SAASS,EAAeC,EAAI,CAClC,OAAO,YAAaC,EAAM,CACzB,IAAIC,EAA8BD,EAAK,CAAC,EACxC,OAAAC,EAAM,eAAgB,EAEfF,GAAI,MAAM,KAAMC,CAAI,CAC3B,CACF,61DC9FK,IAAAE,IAAU,EAAE,EACZC,IAAY,EAAK,EACjBC,IAAuB,IAAI,EAEhB,eAAAC,GAAe,CACxB,GAAAC,EAAAJ,CAAO,EAAC,KAAI,EAEjBK,CAAAA,EAAAJ,EAAY,EAAI,EAChBI,EAAAH,EAAQ,IAAI,EAER,GAAA,CACG,MAAAI,EAAe,MAAAC,EAAU,YAAUP,CAAO,CAAA,EAChD,QAAQ,IAAI,qBAAsBM,CAAM,EAGlC,MAAAE,EAAWJ,EAAAJ,CAAO,EAAC,MAAM,GAAG,EAAE,IAAG,GAAI,QAAQ,OAAQ,EAAE,GAAK,aAGlE,aAAa,QAAQ,cAAeQ,CAAQ,QAGtCC,EAAI,gBAAiB,mBAAmBD,CAAQ,CAAA,EAAA,CACtD,OAAQE,EAAK,GACbR,EAAQQ,aAAe,MAAQA,EAAI,QAAU,4BAA4B,CAC1E,QAAU,CACTL,EAAAJ,EAAY,EAAK,CAClB,EACD,UAESU,EAAcZ,EAAsB,CACxCA,EAAM,MAAQ,SAAO,CAAAK,EAAKH,CAAS,GACtCE,EAAY,CAEd,iOAmCUF,CAAS,EAAAW,EAAAC,CAAA,EAAAD,EAAAE,EAAA,EAAA,iFAadZ,CAAK,CAAA,CAAA,oBAFHA,CAAK,GAAAU,EAAAG,CAAA,2CAnBGd,CAAS,uBAKTA,CAAS,GAAA,CAAAG,EAAKJ,CAAO,EAAC,KAAI,MATxBgB,EAAApC,EAAA,IAAAwB,EAAAJ,CAAO,OAAPA,EAAOiB,CAAA,CAAA,gBACPN,CAAa,iBALGR,CAAY,CAAA","x_google_ignoreList":[0,1]}